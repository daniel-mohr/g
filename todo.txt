Ich denke an folgende Features (KISS):

* command line interface (zumindest fürs Erste)
* Trennung zwischen Backend (Library/Package/Klasse) und 
  Frontend (command line)
* checken einer einheitlichen Datenstruktur:
  * README* (Dateiendung egal)
  * LICENSE* (Dateiendung egal)
  * MANIFEST* (Dateiendung egal)
  * automatisch parsebare Beschreibung (machine-readable)
    (datacite.yml bei gin oder DMP in irgendeiner Form)
    Hierbei würde ich versuchen bei den Standard-Python-Libraries zu 
    bleiben:
    * json (als Teil von yaml)
    * configparser (INI Datei)
* checken der Datenablage:
  * Repository
  * checksums
  * (persistent) identifier
  * Datenformate
* Ausgabe in verschiedenen Formaten:
  * human readable
  * machine-readable (analog zu oben json oder configparser oder ...)
